services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - new_printai:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prometheus_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      bash -c "python manage.py migrate --noinput &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./dataportal:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_NAME=mydatabase
      - DATABASE_USER=myuser
      - DATABASE_PASSWORD=mypassword
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    networks:
      - prometheus_network

  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./dynamic/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus 

  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - prometheus_network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
  #     - "traefik.http.routers.prometheus.entrypoints=websecure"
  #     - "traefik.http.routers.prometheus.tls=true"
  #     - "traefik.http.routers.prometheus.tls.certresolver=default"


  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--providers.file.filename=/dynamic/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8085:8080"
    volumes:
      - "./certs:/certs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./dynamic:/dynamic"
    networks:
      - prometheus_network
    labels:
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=default"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=default"


networks:
  prometheus_network:
    external: true

volumes:
  new_printai:
    external: true